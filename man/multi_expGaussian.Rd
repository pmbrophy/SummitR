% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PeakFunctions_multi_expGaussian.R
\name{multi_expGaussian}
\alias{multi_expGaussian}
\title{Calculate Exponentially Modified Gaussian Probability Density(s) or Peak(s)}
\usage{
multi_expGaussian(
  x,
  mus,
  sigmas,
  lambdas,
  probDensity,
  ks,
  returnComponentPks = FALSE
)
}
\arguments{
\item{x}{a vector of x-coordinates from which the corrisponding y-coordinates
are calculated}

\item{mus}{the means of the gaussian components}

\item{sigmas}{the standard deviations of the gaussian components}

\item{lambdas}{rate parameters of the exponential components}

\item{probDensity}{Should the function produce a probability density
`TRUE` or exponentially modified gaussian peaks `FALSE` with amplitudes ks? default is `TRUE`.}

\item{ks}{Amplitudes of the gaussian peaks. Only used when `probDensity == TRUE`}

\item{returnComponentPks}{Should the function return a single vector
containing the sum of each individual peak `FALSE` or a data.frame
containing the input vector `x`, each component peak `peak_n`, and the
summed result of the component peaks `peak_sum`. The default is FALSE.}
}
\value{
returns either a single vector of y-coordinates the same length as x or a data.frame
}
\description{
Calculate Exponentially Modified Gaussian Probability Density(s) or Peak(s)
}
\examples{
xVec <- seq(from = 1, to = 100, by = 0.1)
pdist <- multi_expGaussian(x = xVec,
                           mus = c(5, 10, 15),
                           sigmas = c(1, 2, 4),
                           lambdas = c(0.1, 0.1, 0.2),
                           probDensity = TRUE,
                           returnComponentPks = FALSE)
pdist_components <- multi_expGaussian(x = xVec,
                                      mus = c(5, 10, 15),
                                      sigmas = c(1, 2, 4),
                                      lambdas = c(0.1, 0.1, 0.2),
                                      probDensity = TRUE,
                                      returnComponentPks = TRUE)
plot(x = xVec, y = pdist)
plot(x = pdist_components$x, y = pdist_components$peak_sum)
points(x = pdist_components$x, y = pdist_components$peak_1, col = "red")
points(x = pdist_components$x, y = pdist_components$peak_2, col = "blue")
points(x = pdist_components$x, y = pdist_components$peak_3, col = "green")

}
